{"config":{"lang":["fr"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"index.html","title":"Accueil","text":""},{"location":"index.html#langages-de-programmation","title":"Langages de programmation","text":"<ul> <li> Guide Python</li> <li> Guide C</li> <li> HTML/CSS/JS</li> </ul>"},{"location":"index.html#reseaux-interfaces","title":"R\u00e9seaux &amp; Interfaces","text":"<ul> <li> R\u00e9seaux TCP/IP</li> <li> Interfaces et Protocoles de Communication</li> </ul>"},{"location":"index.html#systemes-exploitation","title":"Syst\u00e8mes exploitation","text":"<ul> <li> Windows</li> <li> GNU/Linux</li> </ul>"},{"location":"c.html","title":"Guide C/C++","text":""},{"location":"gnu_linux.html","title":"GNU/Linux","text":""},{"location":"gnu_linux.html#installations","title":"Installations","text":"<p>Installation serveur web debian</p>"},{"location":"gnu_linux.html#gestion-des-peripheriques","title":"Gestion des p\u00e9riph\u00e9riques","text":"<p>Lister les ports usb utilis\u00e9s</p>"},{"location":"interfaces.html","title":"Interfaces et Protocoles de Communication","text":""},{"location":"python.html","title":"Python","text":""},{"location":"python.html#environnement-virtuel","title":"Environnement virtuel","text":"<p>Installer un environnement virtuel</p>"},{"location":"reseaux.html","title":"R\u00e9seaux TCP/IP","text":""},{"location":"web.html","title":"HTML/CSS/JS","text":""},{"location":"windows.html","title":"Windows","text":""},{"location":"gnu_linux/install_srv_web_debian.html","title":"Installation d'un serveur web Debian","text":""},{"location":"gnu_linux/list_usb.html","title":"Gestion des Ports USB et S\u00e9rie sous Linux","text":"<p>Ce document explique comment lister, identifier et utiliser les p\u00e9riph\u00e9riques USB (Arduino, micro:bit, cartes relais USB, etc.) sous Linux.</p>"},{"location":"gnu_linux/list_usb.html#1-types-de-peripheriques-devtty","title":"1. Types de p\u00e9riph\u00e9riques <code>/dev/tty*</code>","text":"Nom Exemple Description ttyS* <code>/dev/ttyS0</code> Ports s\u00e9rie mat\u00e9riels (RS-232 int\u00e9gr\u00e9s \u00e0 la carte m\u00e8re). ttyUSB* <code>/dev/ttyUSB0</code> Ports cr\u00e9\u00e9s par un convertisseur USB \u2194 UART (puces FTDI, Prolific, CH340, etc.). ttyACM* <code>/dev/ttyACM0</code> P\u00e9riph\u00e9riques USB CDC ACM (Arduino officiel, micro:bit, STM32, etc.)."},{"location":"gnu_linux/list_usb.html#2-lister-les-peripheriques-usb","title":"2. Lister les p\u00e9riph\u00e9riques USB","text":""},{"location":"gnu_linux/list_usb.html#commandes-de-base","title":"Commandes de base","text":"<pre><code>lsusb\n</code></pre> <ul> <li>Affiche tous les p\u00e9riph\u00e9riques USB connect\u00e9s avec Vendor ID et Product ID.</li> <li>Exemple de sortie :</li> </ul> <pre><code>Bus 001 Device 005: ID 2341:0043 Arduino SA Uno R3\nBus 001 Device 006: ID 0d28:0204 ARM mbed Micro:bit\nBus 001 Device 007: ID 16c0:05df USB-Relay-8\n</code></pre> <pre><code>dmesg -w\n</code></pre> <ul> <li>Affiche les logs du noyau en temps r\u00e9el.</li> <li>Tr\u00e8s utile pour voir quel <code>/dev/tty*</code> est cr\u00e9\u00e9 lors du branchement.</li> </ul> <pre><code>[ 1234.5678 ] usb 1-1.2: ch341-uart converter now attached to ttyUSB0\n[ 1234.5680 ] cdc_acm 1-1.3:1.0: ttyACM0: USB ACM device\n</code></pre> <pre><code>ls /dev/ttyUSB* /dev/ttyACM*\n</code></pre> <ul> <li>Liste les p\u00e9riph\u00e9riques s\u00e9ries accessibles.</li> </ul>"},{"location":"gnu_linux/list_usb.html#3-identifier-quel-port-correspond-a-ton-materiel","title":"3. Identifier quel port correspond \u00e0 ton mat\u00e9riel","text":""},{"location":"gnu_linux/list_usb.html#methode-pratique","title":"M\u00e9thode pratique","text":"<ol> <li>D\u00e9branche ton p\u00e9riph\u00e9rique.</li> <li>Tape :  </li> </ol> <pre><code>ls /dev/ttyUSB* /dev/ttyACM*\n</code></pre> <ol> <li>Branche ton p\u00e9riph\u00e9rique.</li> <li>Re-tape la m\u00eame commande : le nouveau device est ton port s\u00e9rie.</li> </ol>"},{"location":"gnu_linux/list_usb.html#verification-detaillee","title":"V\u00e9rification d\u00e9taill\u00e9e","text":"<pre><code>udevadm info -q all -n /dev/ttyUSB0\n</code></pre> <ul> <li>Affiche les infos Vendor ID, Product ID et num\u00e9ro de s\u00e9rie.</li> </ul>"},{"location":"gnu_linux/list_usb.html#4-exemples-pratiques","title":"4. Exemples pratiques","text":""},{"location":"gnu_linux/list_usb.html#arduino-uno","title":"\ud83d\udfe6 Arduino Uno","text":"<ul> <li>Officiel : <code>/dev/ttyACM0</code> (CDC ACM)</li> <li>Clone CH340/FTDI : <code>/dev/ttyUSB0</code> (USB\u2194UART)</li> </ul>"},{"location":"gnu_linux/list_usb.html#microbit","title":"\ud83d\udfe9 micro:bit","text":"<ul> <li><code>/dev/ttyACM0</code> (CDC ACM)</li> </ul>"},{"location":"gnu_linux/list_usb.html#5-regles-udev-pour-noms-stables","title":"5. R\u00e8gles <code>udev</code> pour noms stables","text":"<ul> <li>Permet de donner un nom fixe \u00e0 ton Arduino/micro:bit.</li> <li> <p>Exemple pour Arduino Uno officiel :</p> </li> <li> <p>Trouver Vendor ID et Product ID :</p> </li> </ul> <pre><code>lsusb\n</code></pre> <p>Sortie :</p> <pre><code>ID 2341:0043 Arduino SA Uno R3\n</code></pre> <ol> <li>Cr\u00e9er la r\u00e8gle <code>udev</code> :</li> </ol> <pre><code>sudo nano /etc/udev/rules.d/99-arduino.rules\n</code></pre> <p>Contenu :</p> <pre><code>SUBSYSTEM==\"tty\", ATTRS{idVendor}==\"2341\", ATTRS{idProduct}==\"0043\", SYMLINK+=\"arduino_uno\"\n</code></pre> <p>Information</p> <p>Pourquoi 99 comme num\u00e9ro en pr\u00e9fixe ?</p> <ul> <li> <p>udev lit les fichiers de r\u00e8gles dans l\u2019ordre alphab\u00e9tique.</p> </li> <li> <p>Les fichiers num\u00e9rot\u00e9s sont donc lus dans l\u2019ordre croissant.</p> </li> <li> <p>En mettant 99-, tu t\u2019assures que cette r\u00e8gle est lue apr\u00e8s toutes les autres r\u00e8gles syst\u00e8me (comme celles de 10- ou 50- pour les p\u00e9riph\u00e9riques g\u00e9n\u00e9riques).</p> </li> <li> <p>C\u2019est pratique pour \u00e9craser ou compl\u00e9ter les r\u00e8gles existantes pour un p\u00e9riph\u00e9rique sp\u00e9cifique (ici Arduino).</p> </li> </ul> <ol> <li>Recharger les r\u00e8gles :</li> </ol> <pre><code>sudo udevadm control --reload-rules\nsudo udevadm trigger\n</code></pre> <ul> <li>Ton Arduino est maintenant accessible via <code>/dev/arduino_uno</code>.</li> </ul>"},{"location":"python/environnement-virtuel.html","title":"Installation et utilisation d\u2019un environnement virtuel Python (<code>venv</code>)","text":""},{"location":"python/environnement-virtuel.html#1-creation-dun-environnement-virtuel","title":"1. Cr\u00e9ation d\u2019un environnement virtuel","text":"<pre><code>python3 -m venv nom_du_venv\n</code></pre> <ul> <li><code>nom_du_venv</code> : dossier qui contiendra l\u2019environnement virtuel.</li> </ul>"},{"location":"python/environnement-virtuel.html#2-activation-de-lenvironnement-virtuel","title":"2. Activation de l\u2019environnement virtuel","text":"<ul> <li>Sous Linux / macOS :</li> </ul> <p><pre><code>source nom_du_venv/bin/activate\n</code></pre> * Sous Windows :</p> <pre><code>nom_du_venv\\Scripts\\activate\n</code></pre> <p>Lorsque l\u2019environnement est activ\u00e9, le prompt affiche g\u00e9n\u00e9ralement le nom du venv entre parenth\u00e8ses.</p>"},{"location":"python/environnement-virtuel.html#3-desactivation-de-lenvironnement-virtuel","title":"3. D\u00e9sactivation de l\u2019environnement virtuel","text":"<pre><code>deactivate\n</code></pre>"},{"location":"python/environnement-virtuel.html#utilisation-de-pip-dans-un-venv","title":"Utilisation de <code>pip</code> dans un venv","text":""},{"location":"python/environnement-virtuel.html#installer-une-bibliotheque","title":"Installer une biblioth\u00e8que","text":"<pre><code>pip install nom_de_la_bibliotheque\n</code></pre>"},{"location":"python/environnement-virtuel.html#mettre-a-jour-toutes-les-bibliotheques","title":"Mettre \u00e0 jour toutes les biblioth\u00e8ques","text":"<ol> <li>Lister les biblioth\u00e8ques install\u00e9es dans un fichier :</li> </ol> <pre><code>pip freeze &gt; requirements.txt\n</code></pre> <ol> <li>Mettre \u00e0 jour toutes les biblioth\u00e8ques d\u2019un coup (m\u00e9thode avec une boucle) :</li> </ol> <pre><code>pip list --outdated --format=freeze | cut -d = -f 1 | xargs -n1 pip install -U\n</code></pre> <ol> <li>Mettre \u00e0 jour une biblioth\u00e8que sp\u00e9cifique :</li> </ol> <pre><code>pip install --upgrade nom_de_la_bibliotheque\n</code></pre>"},{"location":"python/environnement-virtuel.html#utilisation-dun-fichier-requirementstxt","title":"Utilisation d\u2019un fichier <code>requirements.txt</code>","text":""},{"location":"python/environnement-virtuel.html#exporter-les-bibliotheques-installees","title":"Exporter les biblioth\u00e8ques install\u00e9es","text":"<pre><code>pip freeze &gt; requirements.txt\n</code></pre>"},{"location":"python/environnement-virtuel.html#installer-toutes-les-bibliotheques-listees","title":"Installer toutes les biblioth\u00e8ques list\u00e9es","text":"<pre><code>pip install -r requirements.txt\n</code></pre>"},{"location":"python/environnement-virtuel.html#a-retenir","title":"\u00c0 retenir","text":"<ul> <li>Cr\u00e9ez un venv pour isoler vos projets Python.</li> <li>Activez ou d\u00e9sactivez le venv avec <code>source .../activate</code> et <code>deactivate</code>.</li> <li>Installez, exportez, et mettez \u00e0 jour vos biblioth\u00e8ques avec <code>pip</code>.</li> <li>Utilisez <code>requirements.txt</code> pour partager ou reproduire l\u2019environnement d\u2019un projet.</li> </ul>"}]}