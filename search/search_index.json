{"config":{"lang":["fr"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"index.html","title":"Accueil","text":""},{"location":"index.html#devops","title":"DevOps","text":"<ul> <li> Guide Python (1)</li> <li> Guide C (0)</li> <li> HTML/CSS/JS (0)</li> <li> Git &amp; GitHub (0)</li> <li> Docker (0)</li> <li> Micro:Bit (1)</li> </ul>"},{"location":"index.html#reseaux-interfaces","title":"R\u00e9seaux &amp; Interfaces","text":"<ul> <li> R\u00e9seaux TCP/IP (1)</li> <li> Interfaces et Protocoles de Communication (0)</li> </ul>"},{"location":"index.html#systemes-exploitation","title":"Syst\u00e8mes exploitation","text":"<ul> <li> Windows (0)</li> <li> GNU/Linux (3)</li> </ul>"},{"location":"devops/c.html","title":"Guide C/C++","text":""},{"location":"devops/docker.html","title":"Docker","text":""},{"location":"devops/git.html","title":"Git &amp; GitHub","text":""},{"location":"devops/microbit.html","title":"Carte Micro:Bit","text":"<p>Programmer la carte Micro:bit en C</p>"},{"location":"devops/python.html","title":"Python","text":""},{"location":"devops/python.html#environnement-virtuel","title":"Environnement virtuel","text":"<p>Installer un environnement virtuel</p>"},{"location":"devops/web.html","title":"HTML/CSS/JS","text":""},{"location":"devops/microbit/codal.html","title":"Codal","text":""},{"location":"devops/microbit/codal.html#programmer-la-carte-microbit-en-c-c-sous-linux","title":"Programmer la carte Micro:bit en C (C++) sous Linux","text":""},{"location":"devops/microbit/codal.html#installation","title":"Installation","text":"<ol> <li>Ex\u00e9cutez tout d'abord la commande suivante (Debian):</li> </ol> <pre><code>sudo apt install gcc git cmake gcc-arm-none-eabi binutils-arm-none-eabi\n</code></pre> <ol> <li>Pour Fedora :</li> </ol> <pre><code>sudo dnf install -y arm-none-eabi-gcc-cs arm-none-eabi-binutils-cs arm-none-eabi-newlib arm-none-eabi-gcc-cs-c++ cmake ninja-build\n</code></pre> <ol> <li>Lisez la documentation puis t\u00e9l\u00e9chargez le fichier zip sur https://github.com/lancaster-university/microbit-v2-samples.</li> </ol> <p>Lien direct : master.zip</p> <p>D\u00e9compressez cette archive.</p>"},{"location":"devops/microbit/codal.html#utilisation","title":"Utilisation","text":"<ol> <li>Renommez le fichier <code>main.cpp</code> du r\u00e9pertoire <code>microbit-v2-samples-master/source</code> en <code>main.cpp.old</code>.</li> <li>D\u00e9posez votre propre <code>main.cpp</code> dans ce r\u00e9pertoire</li> <li>Positionnez-vous dans le r\u00e9pertoire <code>microbit-v2-samples-master</code></li> <li>Ouvrez un terminal et ex\u00e9cutez la commande <code>python3 build.py</code></li> <li>Copiez le fichier <code>MICROBIT.hex</code> dans le lecteur MICROBIT</li> </ol>"},{"location":"devops/microbit/codal.html#script-dautomatisation","title":"Script d'automatisation :","text":"<pre><code>#! /bin/bash\n\nrm MICROBIT.hex\npython3 build.py\ncp MICROBIT.hex /media/$USER/MICROBIT\n</code></pre> <p>Ce code Bash est \u00e0 enregistrer dans un fichier nomm\u00e9 (par exemple) <code>bad</code> (comme **b**uild **a**nd **d**ownload). Il faut lui donner les droits d'ex\u00e9cution, puis le d\u00e9poser dans <code>microbit-v2-samples-master</code>.</p> <p>Pour programmer votre Micro:bit selon votre code source <code>main.cpp</code>, il suffira de taper <code>./bad</code>dans la console.</p>"},{"location":"devops/microbit/codal.html#port-serie","title":"Port s\u00e9rie","text":"<p>Remarque : la communication s\u00e9rie entre votre PC et la Micro:bit se fait par l'interm\u00e9diaire du fichier sp\u00e9cial <code>/dev/ttyACM0</code> (par d\u00e9faut en 115200 bauds)</p>"},{"location":"devops/microbit/codal.html#brochage","title":"Brochage","text":""},{"location":"devops/microbit/codal.html#exemples-de-programmes-pour-microbit-v2-avec-codal","title":"Exemples de programmes pour Micro:bit V2 avec CODAL","text":""},{"location":"devops/microbit/codal.html#boutons-poussoirs-et-matrice-de-led","title":"Boutons-poussoirs et matrice de led","text":"<p>Programme qui affiche :</p> <ul> <li>A sur la matrice de led si le bouton A est appuy\u00e9</li> <li>B sur la matrice de led si le bouton B est appuy\u00e9</li> <li>un symbole si les deux boutons sont appuy\u00e9s</li> <li>rien si aucun bouton n'est appuy\u00e9</li> </ul> <pre><code>#include \"MicroBit.h\"\n\nMicroBit uBit;\n\nint main() {\n    uBit.init();\n\n    while (true) {\n        bool buttonA = uBit.buttonA.isPressed();\n        bool buttonB = uBit.buttonB.isPressed();\n\n        if (buttonA &amp;&amp; buttonB) {\n            // Affiche toutes les LEDs allum\u00e9es\n            MicroBitImage fleche(\"000,000,000,000,000\\n\"\n                                 \"000,255,255,255,000\\n\"\n                                 \"255,255,255,255,255\\n\"\n                                 \"000,255,255,255,000\\n\"\n                                 \"000,000,000,000,000\\n\");\n            uBit.display.print(fleche);\n        } else if (buttonA) {\n            uBit.display.print(\"A\");\n        } else if (buttonB) {\n            uBit.display.print(\"B\");\n        } else {\n            uBit.display.clear();\n        }\n\n        uBit.sleep(100);\n    }\n}\n</code></pre>"},{"location":"devops/microbit/codal.html#controle-du-pin-0","title":"Contr\u00f4le du pin 0","text":"<p>Un clignoteur \u00e0 la fr\u00e9quence de 1 Hz sur le pin 0.</p> <pre><code>#include \"MicroBit.h\"\n\nMicroBit uBit;\n\nint main() {\n    uBit.init();\n    while (1) {\n        uBit.io.P0.setDigitalValue(1);\n        uBit.sleep(500);\n        uBit.io.P0.setDigitalValue(0);\n        uBit.sleep(500);\n    }\n}\n</code></pre> <p>Pour lire ce pin en entr\u00e9e, il suffit d'utiliser :</p> <pre><code>uBit.io.P0.getDigitalValue();  // lecture bool\u00e9enne (0 ou 1)\nuBit.io.P0.getAnalogValue();   // lecture analogique (0 \u00e0 1023)\n</code></pre>"},{"location":"devops/microbit/codal.html#pwm","title":"PWM","text":"<p>Voici un exemple de programme qui utilise la PWM mat\u00e9rielle pour g\u00e9n\u00e9rer un signal carr\u00e9 sur le pin1 avec un rapport cyclique fixe \u00e0 50\u202f%, et dont la fr\u00e9quence (entre 100 et 200\u202fHz) est mise \u00e0 jour en fonction de la tension analogique lue sur le pin0.</p> <pre><code>#include \"MicroBit.h\"\n\nMicroBit uBit;\n\nint main() {\n    uBit.init();\n    while (1) {\n        int val = uBit.io.P0.getAnalogValue();             // Lecture analogique sur P0 (0-1023)\n        int freq = 100 + (val * 100) / 1023;               // Fr\u00e9quence lin\u00e9aire entre 100 Hz et 200 Hz\n        int period = 1000 / freq;                          // P\u00e9riode en ms (pwm period = 1000/freq)\n        uBit.io.P1.setAnalogPeriod(period);                // Configure la p\u00e9riode de la PWM sur P1\n        uBit.io.P1.setAnalogValue(512);                    // Rapport cyclique \u00e0 50% (512 sur 1023)\n        uBit.sleep(100);                                   // Pause pour mettre \u00e0 jour la fr\u00e9quence\n    }\n}\n</code></pre> <p>R\u00e9sultat obtenu lorsque que la tension sur le pin 0 passe rapidement de 0V \u00e0 3,3V :</p> <p></p> <p>On a effectu\u00e9 deux mesures (en rose et en bleu) montrant bien que la p\u00e9riode du signal carr\u00e9 passe bien de 100 Hz \u00e0 200 Hz.</p>"},{"location":"devops/microbit/codal.html#pwm-2","title":"PWM 2","text":"<p>Le signal g\u00e9n\u00e9r\u00e9 est cette fois-ci de fr\u00e9quence constante et c'est le rapport cyclique qui varie en fonction de la tension appliqu\u00e9e sur le pin 0.</p> <pre><code>#include \"MicroBit.h\"\n\nMicroBit uBit;\n\nint main() {\n    uBit.init();\n    while (1) {\n        int val = uBit.io.P0.getAnalogValue();   // Lecture analogique sur P0 (0-1023)\n        int period = 10;                         // P\u00e9riode en ms (fr\u00e9quence 100 Hz)\n        uBit.io.P1.setAnalogValue(val);          // Rapport cyclique proportionnel \u00e0 val\n        uBit.sleep(10);                          // Pause pour mettre \u00e0 jour la fr\u00e9quence\n    }\n}\n</code></pre> <p>R\u00e9sultat obtenu pour une variation rapide de 0V \u00e0 3,3V de la tension appliqu\u00e9e sur le pin 0 :</p> <p></p> <p>On observe que la fr\u00e9quence du signal reste constante alors que son rapport cyclique \u00e9volue entre ces deux extr\u00eames :</p> <ul> <li> <p>0 (pour V<sub>pin0</sub> = 0V)</p> </li> <li> <p>presque 1 (pour V<sub>pin0</sub> = 3,3V)</p> </li> </ul> <p>remarque : le rapport cyclique maximal est de 1023/1024</p>"},{"location":"devops/microbit/codal.html#accelerometre-et-commande-de-la-matrice-de-leds","title":"Acc\u00e9l\u00e9rom\u00e8tre et commande de la matrice de leds","text":"<p>On d\u00e9tecte l'inclinaison de la carte par rapport \u00e0 l'horizontal (angles pitch et roll) puis on allume une led repr\u00e9sentant cette inclinaison sur la matrice.</p> <pre><code>#include \"MicroBit.h\"\n\nMicroBit uBit;\n\nint convAngle(float angle) { // convertit un angle (\u00b0) en \"coordonn\u00e9e led\"\n    if (angle &lt; -90) angle = -90;\n    if (angle &gt; 90) angle = 90;\n    return (int)round(angle/45 + 2);\n}\n\nint main() {\n    uBit.init();\n\n    while (1) {\n        float pitch = uBit.accelerometer.getPitch();\n        float roll = uBit.accelerometer.getRoll();\n\n        // Efface les leds puis allume la bonne\n        uBit.display.clear();\n        uBit.display.image.setPixelValue(convAngle(roll), convAngle(pitch), 255);\n\n        uBit.sleep(250);\n    }\n} \n</code></pre>"},{"location":"devops/microbit/codal.html#port-serie-sur-pin-2-tx-et-pin-3-rx-en-9600-bauds","title":"Port s\u00e9rie sur pin 2 (TX) et pin 3 (RX) en 9600 bauds","text":"<pre><code>#include \"MicroBit.h\"\n\nMicroBit uBit;\nNRF52Serial ser2(uBit.io.P2, uBit.io.P3);\n\nint main()\n{\n    uBit.init();\n    ser2.setBaudrate(9600);\n\n    while(1)\n    {\n        ser2.send(\"abc\");  // envoi sur le pin 2\n        uBit.sleep(1000);\n    }\n}\n</code></pre> <p>R\u00e9sultat obtenu \u00e0 l'analyseur logique :</p> <p></p> <p>On a mesur\u00e9 la dur\u00e9e d'un bit de start. On obtient 104 \u00b5s, ce qui correspond bien \u00e0 1/9600.</p>"},{"location":"devops/microbit/codal.html#i2c","title":"I2C","text":"<p>Contr\u00f4le d'un expanseur de port PCF8574</p> <ul> <li> <p>\u00c9criture de 0xFE (positionne P0 au niveau bas)</p> </li> <li> <p>Lecture</p> </li> <li> <p>\u00c9criture de 0xFF (repositionne P0 au niveau haut)</p> </li> <li> <p>Lecture</p> </li> </ul> <pre><code>#include \"MicroBit.h\"\n\nMicroBit uBit;\n\n// Adresse I2C du PCF8574 (\u00e0 adapter si n\u00e9cessaire)\nconst uint8_t adresse_pcf8574 = 0x20;\n\n\nint main() {\n    uBit.init();\n\n    while(1) {\n        uint8_t octet_recu;\n\n        // \u00c9criture sur le PCF8574\n        uint8_t octet_envoye = 0xFE;\n        uBit.i2c.write(adresse_pcf8574 &lt;&lt; 1, &amp;octet_envoye, 1);\n\n        // Lecture de l'\u00e9tat des broches\n        uBit.i2c.read(adresse_pcf8574 &lt;&lt; 1, &amp;octet_recu, 1);\n\n        // \u00c9criture sur le PCF8574\n        octet_envoye = 0xFF;\n        uBit.i2c.write(adresse_pcf8574 &lt;&lt; 1, &amp;octet_envoye, 1);\n\n        // Lecture de l'\u00e9tat des broches\n        uBit.i2c.read(adresse_pcf8574 &lt;&lt; 1, &amp;octet_recu, 1);\n        uBit.sleep(1000);\n    }\n}\n</code></pre> <p>Chronogrammes obtenus :</p> <p></p>"},{"location":"devops/microbit/codal.html#multitache","title":"Multit\u00e2che","text":"<p>Programme qui utilise trois t\u00e2ches parall\u00e8les (fibres) pour surveiller la temp\u00e9rature ainsi que les boutons A et B. Il affiche les informations sur le port s\u00e9rie USB.</p> <pre><code>#include \"MicroBit.h\"\n\nMicroBit uBit;\n\n// T\u00e2che 1 : temp\u00e9rature toutes les trois secondes\nvoid tacheT() {\n    while (true) {\n        int temp = uBit.thermometer.getTemperature();\n        uBit.serial.printf(\"Temp\u00e9rature : %d \u00b0C\\r\\n\", temp);\n        uBit.sleep(3000);\n    }\n}\n\n// T\u00e2che 2 : bouton A\nvoid tacheA() {\n    while (true) {\n        if (uBit.buttonA.isPressed())\n            uBit.serial.printf(\"Bouton A\\r\\n\");\n        uBit.sleep(1000);\n    }\n}\n\n// T\u00e2che 3 : bouton B\nvoid tacheB() {\n    while (true) {\n        if (uBit.buttonB.isPressed())\n            uBit.serial.printf(\"Bouton B\\r\\n\");\n        uBit.sleep(1000);\n    }\n}\n\nint main() {\n    uBit.init();\n\n    create_fiber(tacheT);\n    create_fiber(tacheA);\n    create_fiber(tacheB);\n\n    release_fiber();\n    return 0;\n</code></pre> <p>Cette page est mise \u00e0 disposition selon les termes de la licence  Creative Commons Attribution - Pas d\u2019Utilisation Commerciale - Partage dans les M\u00eames Conditions 4.0 International.</p> <p></p>"},{"location":"devops/python/environnement-virtuel.html","title":"Installation et utilisation d\u2019un environnement virtuel Python (<code>venv</code>)","text":""},{"location":"devops/python/environnement-virtuel.html#1-creation-dun-environnement-virtuel","title":"1. Cr\u00e9ation d\u2019un environnement virtuel","text":"<pre><code>python3 -m venv nom_du_venv\n</code></pre> <ul> <li><code>nom_du_venv</code> : dossier qui contiendra l\u2019environnement virtuel.</li> </ul>"},{"location":"devops/python/environnement-virtuel.html#2-activation-de-lenvironnement-virtuel","title":"2. Activation de l\u2019environnement virtuel","text":"<ul> <li>Sous Linux / macOS :</li> </ul> <pre><code>source nom_du_venv/bin/activate\n</code></pre> <ul> <li>Sous Windows :</li> </ul> <pre><code>nom_du_venv\\Scripts\\activate\n</code></pre> <p>Lorsque l\u2019environnement est activ\u00e9, le prompt affiche g\u00e9n\u00e9ralement le nom du venv entre parenth\u00e8ses.</p>"},{"location":"devops/python/environnement-virtuel.html#3-desactivation-de-lenvironnement-virtuel","title":"3. D\u00e9sactivation de l\u2019environnement virtuel","text":"<pre><code>deactivate\n</code></pre>"},{"location":"devops/python/environnement-virtuel.html#utilisation-de-pip-dans-un-venv","title":"Utilisation de <code>pip</code> dans un venv","text":""},{"location":"devops/python/environnement-virtuel.html#installer-une-bibliotheque","title":"Installer une biblioth\u00e8que","text":"<pre><code>pip install nom_de_la_bibliotheque\n</code></pre>"},{"location":"devops/python/environnement-virtuel.html#mettre-a-jour-toutes-les-bibliotheques","title":"Mettre \u00e0 jour toutes les biblioth\u00e8ques","text":"<ol> <li>Lister les biblioth\u00e8ques install\u00e9es dans un fichier :</li> </ol> <pre><code>pip freeze &gt; requirements.txt\n</code></pre> <ol> <li>Mettre \u00e0 jour toutes les biblioth\u00e8ques d\u2019un coup (m\u00e9thode avec une boucle) :</li> </ol> <pre><code>pip list --outdated --format=freeze | cut -d = -f 1 | xargs -n1 pip install -U\n</code></pre> <ol> <li>Mettre \u00e0 jour une biblioth\u00e8que sp\u00e9cifique :</li> </ol> <pre><code>pip install --upgrade nom_de_la_bibliotheque\n</code></pre>"},{"location":"devops/python/environnement-virtuel.html#utilisation-dun-fichier-requirementstxt","title":"Utilisation d\u2019un fichier <code>requirements.txt</code>","text":""},{"location":"devops/python/environnement-virtuel.html#exporter-les-bibliotheques-installees","title":"Exporter les biblioth\u00e8ques install\u00e9es","text":"<pre><code>pip freeze &gt; requirements.txt\n</code></pre>"},{"location":"devops/python/environnement-virtuel.html#installer-toutes-les-bibliotheques-listees","title":"Installer toutes les biblioth\u00e8ques list\u00e9es","text":"<pre><code>pip install -r requirements.txt\n</code></pre>"},{"location":"devops/python/environnement-virtuel.html#a-retenir","title":"\u00c0 retenir","text":"<ul> <li>Cr\u00e9ez un venv pour isoler vos projets Python.</li> <li>Activez ou d\u00e9sactivez le venv avec <code>source .../activate</code> et <code>deactivate</code>.</li> <li>Installez, exportez, et mettez \u00e0 jour vos biblioth\u00e8ques avec <code>pip</code>.</li> <li>Utilisez <code>requirements.txt</code> pour partager ou reproduire l\u2019environnement d\u2019un projet.</li> </ul>"},{"location":"os/gnu_linux.html","title":"GNU/Linux","text":""},{"location":"os/gnu_linux.html#installations","title":"Installations","text":"<p>Installation serveur web debian</p>"},{"location":"os/gnu_linux.html#gestion-des-peripheriques","title":"Gestion des p\u00e9riph\u00e9riques","text":"<p>Lister les ports usb utilis\u00e9s</p>"},{"location":"os/gnu_linux.html#gestion-des-services","title":"Gestion des services","text":"<p>Gestion des services avec systemd</p>"},{"location":"os/windows.html","title":"Windows","text":""},{"location":"os/gnu_linux/install_srv_web_debian.html","title":"Installation d'un serveur web Debian","text":""},{"location":"os/gnu_linux/list_usb.html","title":"Gestion des Ports USB et S\u00e9rie sous Linux","text":"<p>Ce document explique comment lister, identifier et utiliser les p\u00e9riph\u00e9riques USB (Arduino, micro:bit, cartes relais USB, etc.) sous Linux.</p>"},{"location":"os/gnu_linux/list_usb.html#1-types-de-peripheriques-devtty","title":"1. Types de p\u00e9riph\u00e9riques <code>/dev/tty*</code>","text":"Nom Exemple Description ttyS* <code>/dev/ttyS0</code> Ports s\u00e9rie mat\u00e9riels (RS-232 int\u00e9gr\u00e9s \u00e0 la carte m\u00e8re). ttyUSB* <code>/dev/ttyUSB0</code> Ports cr\u00e9\u00e9s par un convertisseur USB \u2194 UART (puces FTDI, Prolific, CH340, etc.). ttyACM* <code>/dev/ttyACM0</code> P\u00e9riph\u00e9riques USB CDC ACM (Arduino officiel, micro:bit, STM32, etc.)."},{"location":"os/gnu_linux/list_usb.html#2-lister-les-peripheriques-usb","title":"2. Lister les p\u00e9riph\u00e9riques USB","text":""},{"location":"os/gnu_linux/list_usb.html#commandes-de-base","title":"Commandes de base","text":"<pre><code>lsusb\n</code></pre> <ul> <li>Affiche tous les p\u00e9riph\u00e9riques USB connect\u00e9s avec Vendor ID et Product ID.</li> <li>Exemple de sortie :</li> </ul> <pre><code>Bus 001 Device 005: ID 2341:0043 Arduino SA Uno R3\nBus 001 Device 006: ID 0d28:0204 ARM mbed Micro:bit\nBus 001 Device 007: ID 16c0:05df USB-Relay-8\n</code></pre> <pre><code>dmesg -w\n</code></pre> <ul> <li>Affiche les logs du noyau en temps r\u00e9el.</li> <li>Tr\u00e8s utile pour voir quel <code>/dev/tty*</code> est cr\u00e9\u00e9 lors du branchement.</li> </ul> <pre><code>[ 1234.5678 ] usb 1-1.2: ch341-uart converter now attached to ttyUSB0\n[ 1234.5680 ] cdc_acm 1-1.3:1.0: ttyACM0: USB ACM device\n</code></pre> <pre><code>ls /dev/ttyUSB* /dev/ttyACM*\n</code></pre> <ul> <li>Liste les p\u00e9riph\u00e9riques s\u00e9ries accessibles.</li> </ul>"},{"location":"os/gnu_linux/list_usb.html#3-identifier-quel-port-correspond-a-ton-materiel","title":"3. Identifier quel port correspond \u00e0 ton mat\u00e9riel","text":""},{"location":"os/gnu_linux/list_usb.html#methode-pratique","title":"M\u00e9thode pratique","text":"<ol> <li>D\u00e9branche ton p\u00e9riph\u00e9rique.</li> <li>Tape :  </li> </ol> <pre><code>ls /dev/ttyUSB* /dev/ttyACM*\n</code></pre> <ol> <li>Branche ton p\u00e9riph\u00e9rique.</li> <li>Re-tape la m\u00eame commande : le nouveau device est ton port s\u00e9rie.</li> </ol>"},{"location":"os/gnu_linux/list_usb.html#verification-detaillee","title":"V\u00e9rification d\u00e9taill\u00e9e","text":"<pre><code>udevadm info -q all -n /dev/ttyUSB0\n</code></pre> <ul> <li>Affiche les infos Vendor ID, Product ID et num\u00e9ro de s\u00e9rie.</li> </ul>"},{"location":"os/gnu_linux/list_usb.html#4-exemples-pratiques","title":"4. Exemples pratiques","text":""},{"location":"os/gnu_linux/list_usb.html#arduino-uno","title":"\ud83d\udfe6 Arduino Uno","text":"<ul> <li>Officiel : <code>/dev/ttyACM0</code> (CDC ACM)</li> <li>Clone CH340/FTDI : <code>/dev/ttyUSB0</code> (USB\u2194UART)</li> </ul>"},{"location":"os/gnu_linux/list_usb.html#microbit","title":"\ud83d\udfe9 micro:bit","text":"<ul> <li><code>/dev/ttyACM0</code> (CDC ACM)</li> </ul>"},{"location":"os/gnu_linux/list_usb.html#5-regles-udev-pour-noms-stables","title":"5. R\u00e8gles <code>udev</code> pour noms stables","text":"<ul> <li>Permet de donner un nom fixe \u00e0 ton Arduino/micro:bit.</li> <li> <p>Exemple pour Arduino Uno officiel :</p> </li> <li> <p>Trouver Vendor ID et Product ID :</p> </li> </ul> <pre><code>lsusb\n</code></pre> <p>Sortie :</p> <pre><code>ID 2341:0043 Arduino SA Uno R3\n</code></pre> <ol> <li>Cr\u00e9er la r\u00e8gle <code>udev</code> :</li> </ol> <pre><code>sudo nano /etc/udev/rules.d/99-arduino.rules\n</code></pre> <p>Contenu :</p> <pre><code>SUBSYSTEM==\"tty\", ATTRS{idVendor}==\"2341\", ATTRS{idProduct}==\"0043\", SYMLINK+=\"arduino_uno\"\n</code></pre> <p>Information</p> <p>Pourquoi 99 comme num\u00e9ro en pr\u00e9fixe ?</p> <ul> <li> <p>udev lit les fichiers de r\u00e8gles dans l\u2019ordre alphab\u00e9tique.</p> </li> <li> <p>Les fichiers num\u00e9rot\u00e9s sont donc lus dans l\u2019ordre croissant.</p> </li> <li> <p>En mettant 99-, tu t\u2019assures que cette r\u00e8gle est lue apr\u00e8s toutes les autres r\u00e8gles syst\u00e8me (comme celles de 10- ou 50- pour les p\u00e9riph\u00e9riques g\u00e9n\u00e9riques).</p> </li> <li> <p>C\u2019est pratique pour \u00e9craser ou compl\u00e9ter les r\u00e8gles existantes pour un p\u00e9riph\u00e9rique sp\u00e9cifique (ici Arduino).</p> </li> </ul> <ol> <li>Recharger les r\u00e8gles :</li> </ol> <pre><code>sudo udevadm control --reload-rules\nsudo udevadm trigger\n</code></pre> <ul> <li>Ton Arduino est maintenant accessible via <code>/dev/arduino_uno</code>.</li> </ul>"},{"location":"os/gnu_linux/systemd.html","title":"Gestion des services avec systemd","text":"<p>systemd est le syst\u00e8me d'initialisation et de gestion des services sous la plupart des distributions Linux modernes. Il remplace l'ancien syst\u00e8me SysVinit et offre des fonctionnalit\u00e9s avanc\u00e9es pour d\u00e9marrer, arr\u00eater, surveiller et g\u00e9rer les services syst\u00e8me.</p> <p>Les commandes principales s'utilisent via <code>systemctl</code>, qui permet de contr\u00f4ler l'\u00e9tat des services, de les activer/d\u00e9sactiver au d\u00e9marrage, et bien plus encore.</p>"},{"location":"os/gnu_linux/systemd.html#tableau-des-commandes-systemctl-les-plus-utiles","title":"Tableau des commandes systemctl les plus utiles","text":"Commande Description <code>systemctl list-units --type=service</code> Lister tous les services charg\u00e9s (actifs et inactifs) <code>systemctl list-units --type=service --state=running</code> Lister uniquement les services en cours d'ex\u00e9cution <code>systemctl list-units --type=service --state=failed</code> Lister les services en \u00e9chec <code>systemctl list-units --type=service --all</code> Lister tous les services (y compris inactifs) <code>systemctl list-units --type=service --all | grep -i \"mot_cl\u00e9\"</code> Trouver un service \u00e0 partir d\u2019un mot-cl\u00e9 <code>systemctl list-unit-files | grep -i \"mot_cl\u00e9\"</code> Trouver un fichier de service \u00e0 partir d\u2019un mot-cl\u00e9 <code>systemctl status &lt;nom_du_service&gt;</code> Afficher le statut d\u00e9taill\u00e9 d'un service <code>systemctl start &lt;nom_du_service&gt;</code> D\u00e9marrer un service <code>systemctl stop &lt;nom_du_service&gt;</code> Arr\u00eater un service <code>systemctl restart &lt;nom_du_service&gt;</code> Red\u00e9marrer un service <code>systemctl reload &lt;nom_du_service&gt;</code> Recharger la configuration d'un service sans interruption <code>systemctl enable &lt;nom_du_service&gt;</code> Activer un service pour qu'il d\u00e9marre au boot <code>systemctl disable &lt;nom_du_service&gt;</code> D\u00e9sactiver un service pour qu'il ne d\u00e9marre pas au boot <code>systemctl is-enabled &lt;nom_du_service&gt;</code> V\u00e9rifier si un service est activ\u00e9 au d\u00e9marrage <code>systemctl is-active &lt;nom_du_service&gt;</code> V\u00e9rifier si un service est actuellement actif <code>systemctl daemon-reload</code> Recharger la configuration de systemd apr\u00e8s modification des fichiers de service <code>journalctl -u &lt;nom_du_service&gt;</code> Afficher les logs d'un service sp\u00e9cifique <code>systemctl --failed</code> Lister les services en \u00e9chec"},{"location":"reseaux_interfaces/interfaces.html","title":"Interfaces et Protocoles de Communication","text":""},{"location":"reseaux_interfaces/reseaux.html","title":"R\u00e9seaux TCP/IP","text":"<p>Le DNS</p>"},{"location":"reseaux_interfaces/reseaux/guide_dns.html","title":"Guide DNS","text":""},{"location":"reseaux_interfaces/reseaux/guide_dns.html#1-concepts-fondamentaux-du-dns","title":"1. Concepts fondamentaux du DNS","text":""},{"location":"reseaux_interfaces/reseaux/guide_dns.html#quest-ce-que-le-dns","title":"Qu'est ce que le DNS ?","text":"<p>Le DNS (Domain Name System) est le syst\u00e8me qui traduit les noms de domaine (ex: <code>example.com</code>) en adresses IP (ex: <code>93.184.216.34</code>). C'est l\u2019\u00e9quivalent d\u2019un annuaire t\u00e9l\u00e9phonique d\u2019Internet. Le DNS est une base de donn\u00e9es distribu\u00e9e organis\u00e9e de fa\u00e7on hi\u00e9rarchique </p>"},{"location":"reseaux_interfaces/reseaux/guide_dns.html#base-de-donnees-distribuee","title":"Base de donn\u00e9es distribu\u00e9e","text":"<ul> <li>Le DNS est une base de donn\u00e9es distribu\u00e9e :<ul> <li>Base de donn\u00e9es : une collection de donn\u00e9es ayant une structure similaire.</li> <li>Distribu\u00e9e : les donn\u00e9es sont r\u00e9parties sur un ensemble de machines physiques.</li> </ul> </li> <li>Ces donn\u00e9es sont appel\u00e9es enregistrements, nomm\u00e9s Resource Records (RR) pour le DNS.</li> <li>Chaque RR a une structure comprenant :<ul> <li>Nom : le nom du n\u0153ud ou domaine</li> <li>Type : type d\u2019enregistrement (<code>A</code>, <code>AAAA</code>, <code>CNAME</code>, <code>MX</code>, <code>NS</code>, <code>PTR</code>, etc.)</li> <li>Valeur : l\u2019information associ\u00e9e (IP, nom canonique, etc.)</li> <li>TTL : Time To Live, dur\u00e9e de validit\u00e9 du cache</li> </ul> </li> <li>Exemples de RR : <code>A</code>, <code>AAAA</code>, <code>CNAME</code>, <code>MX</code>, <code>NS</code>, <code>PTR</code>.</li> </ul> <p>Types d'enregistrements DNS</p> <ul> <li>A : adresse IPv4.</li> <li>AAAA : adresse IPv6.</li> <li>CNAME : alias, redirection vers un autre nom de domaine.</li> <li>MX : serveur de messagerie (Mail eXchanger).</li> <li>NS : serveur de noms faisant autorit\u00e9 pour la zone.</li> <li>PTR : pointeur, utilis\u00e9 pour la r\u00e9solution inverse (IP \u2192 nom).</li> <li>SOA : Start Of Authority, informations de base sur la zone.</li> <li>TXT : texte libre (souvent utilis\u00e9 pour SPF, DKIM,     v\u00e9rifications).</li> <li>SRV : localisation d'un service (ex: SIP, XMPP).</li> <li>CAA : Certification Authority Authorization (contr\u00f4le des     certificats TLS).</li> </ul>"},{"location":"reseaux_interfaces/reseaux/guide_dns.html#espace-de-noms-dns","title":"Espace de noms DNS","text":"<ul> <li>C\u2019est l\u2019arborescence hi\u00e9rarchique qui organise tous les noms sur Internet.  </li> <li>Chaque niveau est s\u00e9par\u00e9 par un point (<code>.</code>).  </li> <li>Exemple : <code>www.example.com.</code> fait partie de l\u2019espace de noms DNS.</li> </ul>"},{"location":"reseaux_interfaces/reseaux/guide_dns.html#racine-dns","title":"Racine DNS","text":"<ul> <li>Niveau le plus haut de l\u2019arborescence DNS.</li> <li>Repr\u00e9sent\u00e9e par un simple . (point).</li> <li>Les serveurs racine (root servers) sont responsables de cette partie.</li> </ul>"},{"location":"reseaux_interfaces/reseaux/guide_dns.html#noeud-dns-domaine-et-nom-de-domaine","title":"Noeud DNS, Domaine et nom de Domaine","text":"<ul> <li>Un noeud est une position dans l'arbre.</li> <li>Un domaine est un n\u0153ud qui peut contenir des sous-domaines et \u00e9ventuellement une zone DNS.</li> <li>Un nom de domaine identifie un n\u0153ud dans l\u2019arborescence.</li> <li>Chaque domaine correspond \u00e0 une zone d\u2019autorit\u00e9.</li> </ul> <p>Exemple</p> <ul> <li>Domaine racine : <code>.</code> </li> <li>Domaine <code>.com</code> : c\u2019est un domaine de premier niveau (TLD)  TLD (Top-Level Domain) : <code>.com</code>, <code>.org</code>, <code>.fr</code>, etc.</li> <li>Domaine <code>.com</code> contient les domaines <code>example.com</code>, <code>google.com</code>, etc.   Ce sont des sous domaines de <code>.com</code>.</li> <li>Domaine <code>example.com</code> contient <code>www.example.com</code>, <code>mail.example.com</code>, etc.</li> </ul>"},{"location":"reseaux_interfaces/reseaux/guide_dns.html#fqdn-fully-qualified-domain-name","title":"FQDN (Fully Qualified Domain Name)","text":"<ul> <li>C\u2019est le nom de domaine complet qui inclut tous les niveaux jusqu\u2019\u00e0 la racine (<code>.</code>).  </li> </ul> <p>Exemple</p> <ul> <li><code>www.example.com.</code> est un FQDN (note le point final repr\u00e9sentant la racine).  </li> <li><code>www.example.com</code> (sans point) est souvent consid\u00e9r\u00e9 comme un FQDN implicite.</li> </ul>"},{"location":"reseaux_interfaces/reseaux/guide_dns.html#hote","title":"H\u00f4te","text":"<ul> <li>Extr\u00e9mit\u00e9 d'une branche, correspond \u00e0 une machine ou une entit\u00e9 du r\u00e9seau.</li> <li>un FQDN peut identifier un h\u00f4te, mais \u00e9galement un service ou un alias (CNAME).</li> </ul>"},{"location":"reseaux_interfaces/reseaux/guide_dns.html#zones-dns","title":"Zones DNS","text":"<p>Une zone DNS est une portion de l\u2019espace de noms g\u00e9r\u00e9e par un serveur. - Une zone contient des Resource Records (RR). - Exemple : la zone <code>example.com</code> peut d\u00e9finir les enregistrements <code>A</code>, <code>MX</code>, etc. - Une zone DNS peut contenir plusieurs sous-domaines. - Un sous-domaine peut \u00eatre d\u00e9l\u00e9gu\u00e9 \u00e0 une zone s\u00e9par\u00e9e sur un autre serveur.</p>"},{"location":"reseaux_interfaces/reseaux/guide_dns.html#serveurs-dns","title":"Serveurs DNS","text":"<ul> <li>Serveurs racines : point de d\u00e9part de la r\u00e9solution, connaissent les adresses des serveurs des TLD. Il existe 13 ensembles de serveurs racine r\u00e9partis dans le monde. </li> <li>Serveur primaire (master) : contient la copie officielle de la zone.  </li> <li>Serveurs secondaires (slaves) : re\u00e7oivent des copies du primaire pour la redondance.  </li> <li>Serveurs interm\u00e9diaires / R\u00e9solveurs DNS (caches) : <ul> <li>Ne font pas partie de la hi\u00e9rarchie DNS.</li> <li>Servent de point d\u2019entr\u00e9e pour les clients DNS des machines : ils re\u00e7oivent les requ\u00eates des clients et r\u00e9solvent les noms en interrogeant d\u2019autres serveurs DNS (racines, TLD, zones).</li> <li>Ils stockent temporairement les r\u00e9ponses dans un cache pour acc\u00e9l\u00e9rer les requ\u00eates futures.</li> <li>Exemple : Google Public DNS (8.8.8.8)</li> </ul> </li> </ul>"},{"location":"reseaux_interfaces/reseaux/guide_dns.html#authoritative-answer","title":"Authoritative Answer","text":"<p>Un serveur DNS est authoritative pour une zone quand il fournit une r\u00e9ponse officielle depuis sa base locale (et pas un cache).  </p>"},{"location":"reseaux_interfaces/reseaux/guide_dns.html#2-structure-et-fonctionnement-dun-message-dns","title":"2. Structure et fonctionnement d'un message DNS","text":""},{"location":"reseaux_interfaces/reseaux/guide_dns.html#types-de-requetes-dns","title":"Types de requ\u00eates DNS","text":"<p>Requ\u00eate it\u00e9rative</p> <p>Le serveur DNS ne fait pas tout le travail; il donne l\u2019adresse d\u2019un autre serveur \u00e0 interroger. </p> <p>Requ\u00eate r\u00e9cursive</p> <p>Le serveur DNS fait tout le travail; il donne une r\u00e9ponse compl\u00e8te.</p>"},{"location":"reseaux_interfaces/reseaux/guide_dns.html#principe-de-la-resolution-de-nom","title":"Principe de la r\u00e9solution de nom","text":"<ul> <li>Le client demande au r\u00e9solveur DNS de trouver la r\u00e9ponse compl\u00e8te.\\</li> <li>Le r\u00e9solveur utilise des requ\u00eates it\u00e9ratives aupr\u00e8s d'autres     serveurs si n\u00e9cessaire.\\</li> <li>Le r\u00e9solveur retourne finalement la r\u00e9ponse compl\u00e8te au client.</li> </ul>"},{"location":"reseaux_interfaces/reseaux/guide_dns.html#structure-dun-message-dns","title":"Structure d'un message DNS","text":"<p>Chaque message DNS contient :</p> <ul> <li>En-t\u00eate (Header, 12 octets).</li> <li>Questions (nom + type demand\u00e9).</li> <li>R\u00e9ponses (enregistrements trouv\u00e9s).</li> <li>Authorities (serveurs faisant autorit\u00e9).</li> <li>Additionals (informations suppl\u00e9mentaires).</li> </ul>"},{"location":"reseaux_interfaces/reseaux/guide_dns.html#format-de-len-tete-12-octets","title":"Format de l'en-t\u00eate (12 octets)","text":"<pre><code>+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n|                Identification (16 bits)       |\n+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n|QR|   Opcode  |AA|TC|RD|RA| Z|AD|CD|   RCODE   |\n+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n|                QDCOUNT (16 bits)              |\n+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n|                ANCOUNT (16 bits)              |\n+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n|                NSCOUNT (16 bits)              |\n+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n|                ARCOUNT (16 bits)              |\n+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n</code></pre>"},{"location":"reseaux_interfaces/reseaux/guide_dns.html#description-des-champs","title":"Description des champs","text":"<ul> <li>Identification (16 bits) : num\u00e9ro unique pour associer une     r\u00e9ponse \u00e0 une requ\u00eate.</li> <li>Flags (16 bits) :<ul> <li>QR (1 bit) : 0 = requ\u00eate, 1 = r\u00e9ponse.</li> <li>Opcode (4 bits) : type de requ\u00eate (0 = standard, 1 =     inverse, 2 = status, ...).</li> <li>AA (1 bit) : r\u00e9ponse faisant autorit\u00e9.</li> <li>TC (1 bit) : r\u00e9ponse tronqu\u00e9e (si &gt; 512 octets en UDP).</li> <li>RD (1 bit) : r\u00e9cursion d\u00e9sir\u00e9e par le client.</li> <li>RA (1 bit) : r\u00e9cursion disponible (serveur capable de     r\u00e9cursion).</li> <li>Z (3 bits) : r\u00e9serv\u00e9, toujours 0.</li> <li>AD (1 bit) : donn\u00e9es authentifi\u00e9es (DNSSEC).</li> <li>CD (1 bit) : v\u00e9rification d\u00e9sactiv\u00e9e (DNSSEC).</li> <li>RCODE (4 bits) : code retour (0 = OK, 1 = format invalide, 2     = \u00e9chec serveur, 3 = nom inexistant, ...).</li> </ul> </li> <li>QDCOUNT : nombre de questions.</li> <li>ANCOUNT : nombre de r\u00e9ponses.</li> <li>NSCOUNT : nombre d'enregistrements dans la section Authority.</li> <li>ARCOUNT : nombre d'enregistrements dans la section Additional.</li> </ul>"},{"location":"reseaux_interfaces/reseaux/guide_dns.html#exemple-concret-requete-pour-wwwexamplecom-type-a","title":"Exemple concret : requ\u00eate pour <code>www.example.com</code> (Type A)","text":"<p>DNS et mod\u00e8le OSI</p> <p>\ud83d\udccc DNS est transport\u00e9 par UDP/TCP sur IP. </p> <p>\ud83d\udccc Dans le mod\u00e8le OSI :  </p> <ul> <li> <p>Couche Application (7)      DNS est avant tout un service applicatif (comme HTTP, SMTP, FTP).     Il fournit la traduction nom de domaine \u2194 adresse IP aux applications.</p> </li> <li> <p>Couche Transport (4)      DNS s\u2019appuie sur UDP (port 53) la plupart du temps.</p> </li> <li> <p>Couche R\u00e9seau (3)     Comme tout trafic IP, les paquets DNS sont encapsul\u00e9s dans IPv4/IPv6.</p> </li> </ul> <p>Requ\u00eate DNS standard (Octets du protocole DNS uniquement) :</p> <pre><code>AA BB 01 00 00 01 00 00 00 00 00 00\n03 77 77 77 07 65 78 61 6D 70 6C 65\n03 63 6F 6D 00 00 01 00 01\n</code></pre>"},{"location":"reseaux_interfaces/reseaux/guide_dns.html#decomposition","title":"D\u00e9composition :","text":"<ul> <li>AA BB \u2192 Identification (al\u00e9atoire choisi par le client).</li> <li>01 00 \u2192 Flags (QR=0, RD=1 \u2192 requ\u00eate r\u00e9cursive).</li> <li>00 01 \u2192 QDCOUNT = 1 (une seule question).</li> <li>00 00 \u2192 ANCOUNT = 0 (aucune r\u00e9ponse, c'est une requ\u00eate).</li> <li>00 00 \u2192 NSCOUNT = 0.</li> <li>00 00 \u2192 ARCOUNT = 0.</li> <li>03 77 77 77 ... 63 6F 6D 00 \u2192 Nom demand\u00e9 : <code>www.example.com</code>.</li> <li>00 01 \u2192 Type A (IPv4).</li> <li>00 01 \u2192 Classe IN (Internet).</li> </ul>"}]}